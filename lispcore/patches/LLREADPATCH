(DEFINE-FILE-INFO READTABLE "INTERLISP" PACKAGE "INTERLISP")(FILECREATED " 1-Aug-2020 18:52:48" {DSK}<Users>kaplan>Local>medley3.5>lispcore>patches>LLREADPATCH.;5 5566         changes to%:  (FNS CHARCODE.DECODE)      previous date%: "24-Jul-2020 08:50:43" {DSK}<Users>kaplan>Local>medley3.5>lispcore>patches>LLREADPATCH.;2)(PRETTYCOMPRINT LLREADPATCHCOMS)(RPAQQ LLREADPATCHCOMS ((FNS CHARCODE.DECODE)))(DEFINEQ(CHARCODE.DECODE  [LAMBDA (C NOERROR)                                   (* ; "Edited  1-Aug-2020 18:52 by rmk:")                                                             (* ; "Edited 18-Feb-87 22:03 by bvm:")    (DECLARE (GLOBALVARS CHARACTERNAMES CHARACTERSETNAMES))    (* ;; "RMK 2020:  Added hexstring decoding for  Unicode:  no commas or other delimiters")    (* ;; "This overrides the definition in LLREAD.  It should be placed there, but for some reason it is not possible to then recompile that file:  loading a new .LCOM says that \INVALID.SYMBOL is a bad compiled function, and then it loses track of the keyword package. Could be a load-sequence problem that would be resolved if this is installed in a new INIT.SYSOUT rather than an overlay of files already loaded into the LISP.SYSOUT")    (COND       ((NOT C)        NIL)       ((LISTP C)        (CONS (CHARCODE.DECODE (CAR C)                     NOERROR)              (CHARCODE.DECODE (CDR C)                     NOERROR)))       ((NOT (OR (ATOM C)                 (STRINGP C)))        (AND (NOT NOERROR)             (ERROR "BAD CHARACTER SPECIFICATION" C)))       ((EQ (NCHARS C)            1)        (CHCON1 C))       (T        (SELCHARQ (CHCON1 C)             (^ (AND (SETQ C (CHARCODE.DECODE (SUBSTRING C 2 -1)                                    NOERROR))                     (LOGAND C (LOGNOT 96))))             (%#                  (* ;; "We use IPLUS instead of LOGOR here because some people want ##char to read as Xerox Meta, i.e., 1,char")                 (AND (SETQ C (CHARCODE.DECODE (SUBSTRING C 2 -1)                                     NOERROR))                      (IPLUS C 128)))             (LET              ((STR (MKSTRING C)))              (for X in CHARACTERNAMES when (STRING.EQUAL (CAR X)                                                               STR)                 do (RETURN (OR (NUMBERP (CADR X))                                    (CHARCODE.DECODE (CADR X)                                           NOERROR)))                 finally                 (RETURN (LET ((POS (STRPOSL '(%, - "." "|")                                           STR))                               CH CSET)                      (* ; "In the form charset,char")                              (COND                                 ((AND POS (SETQ CH (OR (CL:PARSE-INTEGER STR :START POS :RADIX 8                                                                :JUNK-ALLOWED T)                                                        (CHARCODE.DECODE (SUBSTRING STR                                                                                    (ADD1 POS))                                                               NOERROR)))                                       (< CH 256)                                       (>= CH 0))            (* ;                                         "parsed the char part as an octal number or character spec")                                  (if (AND [SETQ CSET (OR (CL:PARSE-INTEGER STR :END (SUB1 POS)                                                                     :RADIX 8 :JUNK-ALLOWED T)                                                              (for PAIR in CHARACTERSETNAMES                                                                 first (SETQ POS                                                                            (SUBSTRING STR 1                                                                                   (SUB1 POS)))                                                                 when (STRING.EQUAL (CAR PAIR)                                                                                 POS)                                                                 do (RETURN (CADR PAIR]                                               (< CSET 256)                                               (>= CSET 0))                                      then               (* ;                               "parsed the charset part as an octal number or standard charset name")                                            (LOGOR CH (LLSH CSET 8))                                    elseif (NOT NOERROR)                                      then (ERROR "BAD CHARACTERSET SPECIFICATION" C)))                                 ((AND (NOT (FIXP C))                                       (CL:PARSE-INTEGER (CL:IF (EQ 1 (OR (STRPOS "0x" STR)                                                                          (STRPOS "0X" STR)                                                                          (STRPOS "U+" STR)))                                                             (SUBSTRING STR 3)                                                             STR)                                              :RADIX 16 :JUNK-ALLOWED T)))                                 ((NOT NOERROR)                                  (ERROR "BAD CHARACTER SPECIFICATION" C]))(DECLARE%: DONTCOPY  (FILEMAP (NIL (427 5543 (CHARCODE.DECODE 437 . 5541)))))STOP