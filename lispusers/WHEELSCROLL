(DEFINE-FILE-INFO READTABLE "INTERLISP" PACKAGE "INTERLISP")(FILECREATED "17-Feb-2021 22:37:01" {DSK}<Users>kaplan>Local>medley3.5>git-medley>lispusers>WHEELSCROLL.;31 5760         changes to%:  (FNS WHEELSCROLL)      previous date%: "17-Feb-2021 22:22:29" {DSK}<Users>kaplan>Local>medley3.5>git-medley>lispusers>WHEELSCROLL.;28)(PRETTYCOMPRINT WHEELSCROLLCOMS)(RPAQQ WHEELSCROLLCOMS       [(FNS ENABLEWHEELSCROLL WHEELSCROLL INSTALL-WHEELSCROLL LISPINTERRUPTS.WHEELSCROLL)        [VARS (WHEELSCROLLINTERRUPTS '((520 (WHEELSCROLL 'VERTICAL WHEELSCROLLDELTA)                                            T)                                       (521 (WHEELSCROLL 'VERTICAL (IMINUS WHEELSCROLLDELTA))                                            T]        (GLOBALVARS WHEELSCROLLDELTA WHEELSCROLLSETTLETIME)        (INITVARS (WHEELSCROLLDELTA 10)               (WHEELSCROLLSETTLETIME 50))        (DECLARE%: DONTEVAL@LOAD DOCOPY (P (INSTALL-WHEELSCROLL)                                           (ENABLEWHEELSCROLL T])(DEFINEQ(ENABLEWHEELSCROLL  [LAMBDA (ON)                                      (* ; "Edited 15-Feb-2021 18:17 by rmk:")    (* ;; "So we can toggle this scrolling, for experimentation.")    (IF ON        THEN [KEYACTION 'PAD1 '((520 520) . IGNORE]              [KEYACTION 'PAD2 '((521 521) . IGNORE]      ELSE (KEYACTION 'PAD1 '(IGNORE . IGNORE))            (KEYACTION 'PAD2 '(IGNORE . IGNORE])(WHEELSCROLL  [LAMBDA (DIRECTION DELTA)                             (* ; "Edited 17-Feb-2021 22:35 by rmk:")    (* ;; "The wheel may accidentally turn (giving the interrupt) when the users intention is simply to push the middle button.  And there may be another accidental turn (also giving an interrupt) when the user is releasing the middle button.  Here we try to detect and ignore wheel motions in the first case, we don't yet have the information to solve the second.  (This should not be an issue with a trackpad)")    (* ;; "")    (* ;; "Below we ignore a motion interrupt if it is received when a mouse button is down. We also ignore if the MIDDLE shows up within an interval of WHEELSCROLLSETTLETIME milliseconds.")    (CL:WHEN (LET ((W (WHICHW)))                  (* ;; "Returns the window that should be wheel scrolled, skipping windows that have no SCROLLFN or are pop-up scrollbar window for some other window. ")                  (* ;; "The behavior of pop-up scrollbars (via IN/SCROLL/BAR? in WINDOWSCROLL) is inconsistent with a direct call to SCROLLW in that SCROLLW uses SCROLLBYREPAINTFN for a window without a SCROLLFN while the pop-up does nothing.  We implement th pop-up behavior, otherwise odd windows like those holding menus would scroll in a funky way.")                  (CL:WHEN [AND W (WINDOWPROP W 'SCROLLFN)                                (NOT (WINDOWPROP W (CL:IF (EQ DIRECTION 'VERTICAL)                                                       'VERTICALSCROLLBARFOR                                                       'HORIZONTALSCROLLBARFOR)]                      (CL:WHEN [OR T (AND (MOUSESTATE UP)                                          (NOT (UNTILMOUSESTATE (ONLY MIDDLE)                                                      WHEELSCROLLSETTLETIME]                          (* ;; "Always scroll from the MOUSE process.  Need the KWOTE because PROCESS.EVAL uses CL:EVAL which doesn't like raw windows")                          [PROCESS.EVAL (FIND.PROCESS 'MOUSE)                                 (CL:IF (EQ DIRECTION 'VERTICAL)                                     `(SCROLLW ,(KWOTE W)                                             0                                             ,DELTA)                                     `(SCROLLW ,(KWOTE W)                                             ,DELTA 0))]))])(INSTALL-WHEELSCROLL  [LAMBDA NIL                                           (* ; "Edited 17-Feb-2021 11:53 by rmk:")    (CL:WHEN (GETD 'LISPINTERRUPTS.WHEELSCROLL)        (MOVD? 'LISPINTERRUPTS 'LISPINTERRUPTS.WSORIG)        (MOVD 'LISPINTERRUPTS.WHEELSCROLL 'LISPINTERRUPTS))    (FOR I IN WHEELSCROLLINTERRUPTS DO (INTERRUPTCHAR (CAR I)                                                          (CADR I)                                                          (CADDR I))                                                  (CL:WHEN (BOUNDP 'TEDIT.READTABLE)                                                (* ;; "These actions are invoked when the caret is in the Tedit window, because TEDIT disables the interrupts")                                                      (TEDIT.SETFUNCTION (CAR I)                                                             `[LAMBDA NIL                                                                ,(CADR I]                                                             TEDIT.READTABLE))])(LISPINTERRUPTS.WHEELSCROLL  [LAMBDA NIL                                           (* ; "Edited 17-Feb-2021 11:09 by rmk:")    (* ;; "So wheelscroll interrupts will be installed in every process")    (APPEND WHEELSCROLLINTERRUPTS (LISPINTERRUPTS.WSORIG]))(RPAQQ WHEELSCROLLINTERRUPTS ((520 (WHEELSCROLL 'VERTICAL WHEELSCROLLDELTA)                                       T)                                  (521 (WHEELSCROLL 'VERTICAL (IMINUS WHEELSCROLLDELTA))                                       T)))(DECLARE%: DOEVAL@COMPILE DONTCOPY(GLOBALVARS WHEELSCROLLDELTA WHEELSCROLLSETTLETIME))(RPAQ? WHEELSCROLLDELTA 10)(RPAQ? WHEELSCROLLSETTLETIME 50)(DECLARE%: DONTEVAL@LOAD DOCOPY (INSTALL-WHEELSCROLL)(ENABLEWHEELSCROLL T))(DECLARE%: DONTCOPY  (FILEMAP (NIL (1046 5231 (ENABLEWHEELSCROLL 1056 . 1481) (WHEELSCROLL 1483 . 3887) (INSTALL-WHEELSCROLL 3889 . 4952) (LISPINTERRUPTS.WHEELSCROLL 4954 . 5229)))))STOP