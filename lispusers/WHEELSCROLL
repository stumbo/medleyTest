(DEFINE-FILE-INFO READTABLE "INTERLISP" PACKAGE "INTERLISP")(FILECREATED "16-Feb-2021 22:36:05" {DSK}<Users>kaplan>Local>medley3.5>git-medley>lispusers>WHEELSCROLL.;11 5620         changes to%:  (FNS \TEDIT.WHEELSCROLL \SCROLLBARTOMAIN?)      previous date%: "16-Feb-2021 16:10:43" {DSK}<Users>kaplan>Local>medley3.5>git-medley>lispusers>WHEELSCROLL.;8)(PRETTYCOMPRINT WHEELSCROLLCOMS)(RPAQQ WHEELSCROLLCOMS [(FNS ENABLEWHEELSCROLL WHEELSCROLL INSTALL-WHEELSCROLL                                  LISPINTERRUPTS.WHEELSCROLL CREATESCROLLBARWINDOW \SCROLLBARTOMAIN?)                            (FNS \TEDIT.WHEELSCROLL)                            (INITVARS (WHEELSCROLLDELTA 10))                            (DECLARE%: DONTEVAL@LOAD DOCOPY (P (INSTALL-WHEELSCROLL)                                                               (ENABLEWHEELSCROLL T])(DEFINEQ(ENABLEWHEELSCROLL  [LAMBDA (ON)                                      (* ; "Edited 15-Feb-2021 18:17 by rmk:")    (* ;; "So we can toggle this scrolling, for experimentation.")    (IF ON        THEN [KEYACTION 'PAD1 '((520 520) . IGNORE]              [KEYACTION 'PAD2 '((521 521) . IGNORE]      ELSE (KEYACTION 'PAD1 '(IGNORE . IGNORE))            (KEYACTION 'PAD2 '(IGNORE . IGNORE])(WHEELSCROLL  [LAMBDA (UP)                                          (* ; "Edited 16-Feb-2021 15:35 by rmk:")    (LET ((W (\SCROLLBARTOMAIN?)))         (CL:WHEN W             (SCROLLW W 0 (CL:IF UP                              (IMINUS WHEELSCROLLDELTA)                              WHEELSCROLLDELTA)))])(INSTALL-WHEELSCROLL  [LAMBDA NIL                                           (* ; "Edited 16-Feb-2021 14:38 by rmk:")    (CL:WHEN (GETD 'LISPINTERRUPTS.WHEELSCROLL)        (MOVD? 'LISPINTERRUPTS 'LISPINTERRUPTS.WSORIG)        (MOVD 'LISPINTERRUPTS.WHEELSCROLL 'LISPINTERRUPTS))    (INTERRUPTCHAR 520 '(WHEELSCROLL T)           T)    (INTERRUPTCHAR 521 '(WHEELSCROLL NIL)           T)    (CHANGENAME 'SCROLL.HANDLER 'CREATEW 'CREATESCROLLBARWINDOW)    (CL:WHEN (BOUNDP 'TEDIT.READTABLE)        (* ;; "These actions are invoked when the caret is in the Tedit window.  Otherwise the generic function is called on the Tedit window if the cursor is inside it.")        (TEDIT.SETFUNCTION 520 [FUNCTION (LAMBDA NIL                                           (\TEDIT.WHEELSCROLL T]               TEDIT.READTABLE)        (TEDIT.SETFUNCTION 521 [FUNCTION (LAMBDA NIL                                           (\TEDIT.WHEELSCROLL NIL]               TEDIT.READTABLE))    (CL:WHEN (GETP 'SEDIT 'FILEDATES)        (SEDIT:ADD-COMMAND 520 '(WHEELSCROLL T))        (SEDIT:ADD-COMMAND 521 '(WHEELSCROLL))        (SEDIT:RESET-COMMANDS))])(LISPINTERRUPTS.WHEELSCROLL  [LAMBDA NIL                                           (* ; "Edited 15-Feb-2021 14:50 by rmk:")    (* ;; "So wheelscroll interrupts will be installed in every process")    (APPEND [LIST (LIST 520 '(WHEELSCROLL T))                  (LIST 521 '(WHEELSCROLL]           (LISPINTERRUPTS.WSORIG])(CREATESCROLLBARWINDOW  [LAMBDA (REGION TITLE BORDERSIZE NOOPENFLG PROPS)     (* ; "Edited 16-Feb-2021 14:37 by rmk:")    (* ;; "This replaces CREATEW inside SCROLL.HANDLER.  WINDOW should be bound to the window that this scroll bar will control.  The purpose is to create an unreferenced (LOC) pointer from the controller to the controllee, so that wheel scrolling in the scrollbar can be redirected to the controllee.")    (DECLARE (USEDFREE WINDOW))    (LET ((SBW (CREATEW REGION TITLE BORDERSIZE NOOPENFLG PROPS)))         (WINDOWPROP SBW 'CONTROLLEELOC (LOC WINDOW))         SBW])(\SCROLLBARTOMAIN?  [LAMBDA NIL                                           (* ; "Edited 16-Feb-2021 22:13 by rmk:")    (* ;; "Returns the window that should be wheel scrolled, moving from a scrollbar to its scrollee if necessary.")    (LET ((W (WHICHW)))         (CL:WHEN W             (CL:WHEN (WINDOWPROP W 'CONTROLLEELOC)                 [SETQ W (VAG (WINDOWPROP W 'CONTROLLEELOC]                 (GETMOUSESTATE)                 (\CURSORPOSITION [IPLUS 10 (FETCH LEFT OF (WINDOWPROP W 'REGION]                        LASTMOUSEY)                 (SETCURSOR DEFAULTCURSOR)                 (GETMOUSESTATE)))         (* ;; "IN/SCROLL/BAR? in WINDOWSCROLL does nothing if the window doesn't have a SCROLLFN, even though SCROLLW applies SCROLLBYREPAINTFN as a default in that case.  So a direct call to SCROLLW might scroll a window that can't be scrolled by moving the mouse into the scrollbar (or so it seems).  If we don't exclude this, then odd things like menus would be scrolled that shouldn't be.")         (AND (WINDOWPROP W 'SCROLLFN)              W]))(DEFINEQ(\TEDIT.WHEELSCROLL  [LAMBDA (UP)                                          (* ; "Edited 16-Feb-2021 22:35 by rmk:")    (* ;; "Called from the TEDIT.READTABLE when the wheel moves and the caret is in the TEDIT (WHICHW) window or its scrollbar.")    (LET ((WINDOW (\SCROLLBARTOMAIN?)))         (CL:WHEN WINDOW             [PROCESS.EVAL (FIND.PROCESS 'MOUSE)                    `(SCROLLW ,WINDOW 0 ,(CL:IF UP                                             (IMINUS WHEELSCROLLDELTA)                                             WHEELSCROLLDELTA)])]))(RPAQ? WHEELSCROLLDELTA 10)(DECLARE%: DONTEVAL@LOAD DOCOPY (INSTALL-WHEELSCROLL)(ENABLEWHEELSCROLL T))(DECLARE%: DONTCOPY  (FILEMAP (NIL (875 4891 (ENABLEWHEELSCROLL 885 . 1310) (WHEELSCROLL 1312 . 1636) (INSTALL-WHEELSCROLL 1638 . 2819) (LISPINTERRUPTS.WHEELSCROLL 2821 . 3170) (CREATESCROLLBARWINDOW 3172 . 3785) (\SCROLLBARTOMAIN? 3787 . 4889)) (4892 5475 (\TEDIT.WHEELSCROLL 4902 . 5473)))))STOP