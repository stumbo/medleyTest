(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)(FILECREATED " 9-May-2018 16:32:02" {DSK}<Users>kaplan>Local>medley3.5>lispcore>lispusers>COMPAREDIRECTORIES.;43 26134        changes to%:  (FNS FIND-UNCOMPILED-FILES COMPAREDIRECTORIES)      previous date%: " 9-May-2018 16:25:36" {DSK}<Users>kaplan>Local>medley3.5>lispcore>lispusers>COMPAREDIRECTORIES.;42)(* ; "Copyright (c) 1985, 1986, 1987, 1988, 1990, 1994, 1998, 2018 by Venue & Xerox Corporation.  All rights reserved.")(PRETTYCOMPRINT COMPAREDIRECTORIESCOMS)(RPAQQ COMPAREDIRECTORIESCOMS (                                   (* ;; "Compare the contents to two directories.")                                   (FNS COMPAREDIRECTORIES COMPAREDIRS.FORMATLINE                                         COMPAREDIRECTORIES.NEWPAGEFN COMPARE-DIRECTORIES)                                                                      (* ;; "look for compiled files older than the sources")                                   (FNS FIND-UNCOMPILED-FILES)))(* ;; "Compare the contents to two directories.")(DEFINEQ(COMPAREDIRECTORIES  [LAMBDA (FROMDIR TODIR SHOW FILEPATTERN EXTENSIONSTOAVOID USEDIRECTORYDATE LISTINGFILE ALLVERSIONS)                                                            (* ; "Edited  9-May-2018 16:25 by rmk:")                                                            (* ; "Edited  9-May-2018 16:24 by rmk:")                                                            (* ; "Edited  4-May-2018 23:28 by rmk:")                                                            (* ; "Edited  4-May-2018 23:26 by rmk:")                                                            (* ; "Edited  4-May-2018 16:20 by rmk:")    (* ;; "Compare the contents of two directories, e.g., for change-control purposes.  Compares files matching FILEPATTERN (or *.*;) on FROMDIR and TODIR, listing which is newer, or when one is not found on the other.  If SHOW is or contains SAME, BEFORE, AFTER, then files where the FROM is the same as, earlier than, or later than the TO are shown. SHOW NIL is the same as (BEFORE AFTER), T is the same as (BEFORE AFTER SAME).")    (* ;; "")    (* ;; "Unless USEDIRECTORYDATE, comparison is respect to the the LISP filedate if evailable.")    (* ;; "")    (* ;; "If LISTINGFILE is NIL, output goes to the display.  If a filename ending in TXT or TEXT, then output goes to a text file.  Otherwise, output goes to an image stream.")    (* ;; "Looks only at latest version unless ALLVERSIONS")    (CL:UNLESS FILEPATTERN        (SETQ FILEPATTERN '*.*;))    (SETQ EXTENSIONSTOAVOID (MKLIST EXTENSIONSTOAVOID))    (CL:UNLESS ALLVERSIONS        (SETQ FILEPATTERN (PACKFILENAME.STRING 'VERSION "" 'BODY FILEPATTERN)))    (SETQ FROMDIR (DIRECTORYNAME FROMDIR))                   (* ; "Resolve relative directories, so we can suppress subdirectory matches. Don't know why DIRECTORY produces them  ")    (SETQ TODIR (DIRECTORYNAME TODIR))    (PROG (TEXT LISTINGSTREAM (TONAMEPOS (ADD1 (NCHARS TODIR)))                (FROMNAMEPOS (ADD1 (NCHARS FROMDIR)))                (FROMPATTERN (PACKFILENAME.STRING 'DIRECTORY FROMDIR 'BODY FILEPATTERN))                (TOPATTERN (PACKFILENAME.STRING 'DIRECTORY TODIR 'BODY FILEPATTERN))                FROM-FILES TO-FILES)          [SETQ LISTINGSTREAM (AND LISTINGFILE (IF (EQMEMB (U-CASE (FILENAMEFIELD LISTINGFILE                                                                              'EXTENSION))                                                              '(TXT TEXT))                                                   THEN (SETQ TEXT T)                                                         (OPENSTREAM LISTINGFILE 'OUTPUT)                                                 ELSE (OPENIMAGESTREAM LISTINGFILE NIL                                                                 '(LANDSCAPE T]     (* ;; "Pack may have put on a < or / incorrectly for relative directories")     (* ;; "(CL:UNLESS (MEMB (NTHCHAR FROMDIR 1) '(/ \ <)) (SETQ FROMPATTERN (SUBSTRING FROMPATTERN 2 -1)))(CL:UNLESS (MEMB (NTHCHAR TODIR 1) '(/ \ <)) (SETQ TOPATTERN (SUBSTRING TOPATTERN 2 -1)))")     (* ;; "Filter extensions")          (CL:WHEN (MEMB '* EXTENSIONSTOAVOID)              (SETQ FROMPATTERN (PACKFILENAME.STRING 'EXTENSION "" 'BODY FROMPATTERN))              (SETQ TOPATTERN (PACKFILENAME.STRING 'EXTENSION "" 'BODY TOPATTERN)))     (* ;; "> test to skip subdirectories")          (SETQ FROM-FILES (for FROMFILE in (DIRECTORY FROMPATTERN)                              UNLESS (IF (STRPOS ">" FROMFILE FROMNAMEPOS)                                           ELSEIF (MEMB '* EXTENSIONSTOAVOID)                                             THEN                                                    (* ;;                                             "For some unknown reason, DIRECTORY let's some through")                                                   (FILENAMEFIELD FROMFILE 'EXTENSION)                                           ELSE (CL:MEMBER (UNPACKFILENAME.STRING FROMFILE                                                                      'EXTENSION)                                                           EXTENSIONSTOAVOID :TEST #'STRING-EQUAL))                              collect FROMFILE))          (SETQ TO-FILES (for TOFILE in (DIRECTORY TOPATTERN)                            UNLESS (IF (STRPOS ">" TOFILE TONAMEPOS)                                         ELSEIF (MEMB '* EXTENSIONSTOAVOID)                                           THEN (FILENAMEFIELD TOFILE 'EXTENSION)                                         ELSE (CL:MEMBER (UNPACKFILENAME.STRING TOFILE                                                                    'EXTENSION)                                                         EXTENSIONSTOAVOID :TEST #'STRING-EQUAL))                            collect TOFILE))          (CL:UNLESS (AND TO-FILES FROM-FILES)              (CL:UNLESS FROM-FILES (PRINTOUT T "FROMDIR " FROMDIR " is empty" T))              (CL:UNLESS TO-FILES (PRINTOUT T "TODIR " TODIR " is empty" T))              (RETURN))          (PRINTOUT T "Comparing " FROMDIR 6 "vs. " TODIR T "as of " (DATE)                 T)          [COND             (LISTINGSTREAM (IF TEXT                                THEN (LINELENGTH 1000 LISTINGSTREAM)                                                              (* ; "Don't wrap")                                      (PRINTOUT LISTINGSTREAM "Comparing " FROMDIR 6 "vs. " TODIR T                                              "as of " (DATE)                                             T T)                              ELSE (STREAMPROP LISTINGSTREAM 'AFTERNEWPAGEFN                                               #'COMPAREDIRECTORIES.NEWPAGEFN)                                    [STREAMPROP LISTINGSTREAM 'TITLE (CONS (CONCAT FROMDIR " vs "                                                                                   TODIR)                                                                           (CONCAT "as of " (DATE]                                    (COMPAREDIRECTORIES.NEWPAGEFN LISTINGSTREAM]          (FOR FROMNAME IN FROM-FILES BIND TONAME DT1 DT2 FROMMATCH SHORT-FROM SHORT-TO             EACHTIME (SETQ SHORT-FROM (PACKFILENAME 'HOST NIL 'DIRECTORY NIL 'BODY FROMNAME))                   (SETQ FROMMATCH (PACKFILENAME.STRING 'VERSION NIL 'BODY SHORT-FROM))                   [SETQ DT1 (IF USEDIRECTORYDATE                                 THEN [IDATE (OR (FILEDATE FROMNAME)                                                     (GETFILEINFO FROMNAME 'CREATIONDATE]                               ELSE (GETFILEINFO FROMNAME 'ICREATIONDATE]             DO (FOR TONAME IN TO-FILES WHEN (STREQUAL FROMMATCH (PACKFILENAME.STRING                                                                                  'HOST NIL                                                                                  'DIRECTORY NIL                                                                                  'VERSION NIL                                                                                  'BODY TONAME))                       DO (SETQ TO-FILES (CL:DELETE TONAME TO-FILES))                             [SETQ DT2 (IF USEDIRECTORYDATE                                           THEN (GETFILEINFO TONAME 'ICREATIONDATE)                                         ELSE (IDATE (OR (FILEDATE TONAME)                                                             (GETFILEINFO TONAME 'CREATIONDATE]                             (SETQ SHORT-TO (PACKFILENAME 'HOST NIL 'DIRECTORY NIL 'BODY TONAME))                             (COND                                [(IEQP DT1 DT2)              (* ; "same")                                 (COND                                    ((EQMEMB SHOW '(T SAME))                                     (EQ SHOW FILESTOO)                                     (COMPAREDIRS.FORMATLINE LISTINGSTREAM SHORT-FROM ""                                            (GDATE DT1)                                            " ="                                            (GDATE DT2)                                            SHORT-TO "" TEXT]                                ([OR [AND (ILESSP DT1 DT2)                                          (EQMEMB SHOW '(NIL BEFORE]                                     (AND (IGREATERP DT1 DT2)                                          (EQMEMB SHOW '(NIL AFTER]                                 (COMPAREDIRS.FORMATLINE LISTINGSTREAM SHORT-FROM                                        (GETFILEINFO FROMNAME 'AUTHOR)                                        (GDATE DT1)                                        (COND                                           ((LESSP DT1 DT2)                                            "< ")                                           (T " >"))                                        (GDATE DT2)                                        SHORT-TO                                        (GETFILEINFO TONAME 'AUTHOR)                                        TEXT)))                             (RETURN) FINALLY                                             (* ;; "No match for a FROMFILE")                                            (COMPAREDIRS.FORMATLINE LISTINGSTREAM SHORT-FROM                                                   (GETFILEINFO FROMNAME 'AUTHOR)                                                   (GDATE DT1)                                                   "**" NIL NIL NIL TEXT)))     (* ;; "The TO-FILES that didn't match a FROM-FILE.  GDATE to expand 19xx to 4 digits (Y2K)")          (FOR TONAME SHORT-TO IN TO-FILES             DO (SETQ SHORT-TO (PACKFILENAME.STRING 'HOST NIL 'DIRECTORY NIL 'DEVICE NIL                                          'BODY TONAME))                   (COMPAREDIRS.FORMATLINE LISTINGSTREAM NIL NIL NIL "**"                          [GDATE (IF USEDIRECTORYDATE                                     THEN (GETFILEINFO TONAME 'ICREATIONDATE)                                   ELSE (IDATE (OR (FILEDATE TONAME)                                                       (GETFILEINFO TONAME 'CREATIONDATE]                          SHORT-TO                          (GETFILEINFO TONAME 'AUTHOR)                          TEXT))          (RETURN (AND LISTINGSTREAM (CLOSEF LISTINGSTREAM])(COMPAREDIRS.FORMATLINE  [LAMBDA (STREAM FROM FROMAUTHOR FDATE COMP TDATE TO TOAUTHOR TEXT)                                                            (* ; "Edited  2-May-2018 16:49 by rmk:")    (* ;; "Format one line of the directory comparison listing.  If FROMAUTHOR or TOAUTHOR are non-NIL, list the author in parens; otherwise omit it.")    (COND       ((AND STREAM (NOT TEXT))                              (* ;                                               "It's an image stream, where TAB doesn't work right.")        (LET* [(COMPFONT (FONTCREATE 'MODERN 8 'BOLD NIL STREAM))               (MAINFONT (FONTCREATE 'MODERN 8 NIL NIL STREAM))               (SPACEWIDTH (CHARWIDTH (CHARCODE SPACE)                                  STREAM))               (LEFTMARGIN (DSPLEFTMARGIN NIL STREAM))               (RIGHTMARGIN (DSPRIGHTMARGIN NIL STREAM))               (CENTER (IQUOTIENT (+ LEFTMARGIN RIGHTMARGIN)                              2))               (COMPWIDTH (IQUOTIENT (IMAX (STRINGWIDTH " >" COMPFONT)                                           (STRINGWIDTH "< " COMPFONT)                                           (STRINGWIDTH "==" COMPFONT)                                           (STRINGWIDTH "**" COMPFONT))                                 2))               (LEFTSIDE (- CENTER 353 COMPWIDTH))               (RIGHTSIDE (+ CENTER COMPWIDTH 353))               (FROM-STRING (COND                               (FROM (CL:FORMAT NIL "~A (~A; ~A)" FROM FROMAUTHOR FDATE))                               (T "")))               (TO-STRING (COND                             (TO (CL:FORMAT NIL "~A (~A; ~A)" TO TOAUTHOR TDATE))                             (T ""]              (DSPFONT COMPFONT STREAM)              (DSPXPOSITION (- CENTER (IQUOTIENT (STRINGWIDTH COMP COMPFONT)                                             2))                     STREAM)              (PRIN1 COMP STREAM)              (DSPFONT MAINFONT STREAM)              (DSPXPOSITION (- LEFTSIDE (STRINGWIDTH FROM-STRING MAINFONT))                     STREAM)              (PRIN1 FROM-STRING STREAM)              (DSPXPOSITION RIGHTSIDE STREAM)              (PRINTOUT STREAM TO-STRING T)))       (T                                                    (* ;                                                            "the display, where TAB does work.")          (PRINTOUT STREAM (OR FROM "")                 (COND                    (FROMAUTHOR (CONCAT " (" FROMAUTHOR ")"))                    (T "  "))                 45                 (IF FDATE                     THEN (CONCAT "[" FDATE "]")                   ELSEIF TDATE                     THEN (SPACES (IPLUS 2 (NCHARS TDATE))                                     STREAM)                           "")                 -2 COMP -2 (IF TDATE                                THEN (CONCAT "[" TDATE "]")                              ELSE "")                 -1                 (OR TO "")                 (COND                    (TOAUTHOR (CONCAT " (" TOAUTHOR ")"))                    (T ""))                 T])(COMPAREDIRECTORIES.NEWPAGEFN  [LAMBDA (LISTINGSTREAM)                                (* ; "Edited 15-Nov-88 19:20 by jds")    (* ;; "Print the new-page headings on a COMPARE-DIRECTORIES page.")    (LET* ((LEFT (DSPLEFTMARGIN NIL LISTINGSTREAM))           (RIGHT (DSPRIGHTMARGIN NIL LISTINGSTREAM))           (TITLEFONT (FONTCREATE 'MODERN 10 'BOLD NIL LISTINGSTREAM))           (TITLE (STREAMPROP LISTINGSTREAM 'TITLE))           (HEAD-WIDTH (IQUOTIENT (STRINGWIDTH (CAR TITLE)                                         TITLEFONT)                              2))           (CENTER (IQUOTIENT (+ LEFT RIGHT)                          2)))          (DSPFONT TITLEFONT LISTINGSTREAM)          (MOVETO (- CENTER HEAD-WIDTH)                 (DSPTOPMARGIN NIL LISTINGSTREAM)                 LISTINGSTREAM)          (PRIN1 (CAR TITLE)                 LISTINGSTREAM)          (MOVETO (- RIGHT (STRINGWIDTH (CDR TITLE)                                  TITLEFONT))                 1270 LISTINGSTREAM)          (PRIN1 (CDR TITLE)                 LISTINGSTREAM)          (MOVETO LEFT [IDIFFERENCE (DSPTOPMARGIN NIL LISTINGSTREAM)                              (FIXR (FTIMES 1.5 (FONTPROP TITLEFONT 'HEIGHT]                 LISTINGSTREAM])(COMPARE-DIRECTORIES
  [LAMBDA (FROMDIR TODIR SHOW=FILESTOO FILEPATTERN LISTINGFILE EXTENSIONSTOAVOID)
                                                             (* ; "Edited  3-Nov-94 15:06 by jds")

    (* ;; "Compare the contents of two directories, e.g., for change-control purposes.  Compares files matching FILEPATTERN (or *.*;) on FROMDIR and TODIR, listing which is newer, or when one is not found on the other.  If SHOW=FILESTOO, then files that are the same are also listed.  LISTINGFILE is either a filename for an interpress master, or NIL to go to the display.")

    (LET ((LISTINGSTREAM (COND
                            [LISTINGFILE (OPENIMAGESTREAM LISTINGFILE 'INTERPRESS '(LANDSCAPE T]
                            (T NIL)))
          FROM-GENERATOR TO-GENERATOR)
         (COND
            (LISTINGSTREAM (STREAMPROP LISTINGSTREAM 'AFTERNEWPAGEFN #'COMPAREDIRECTORIES.NEWPAGEFN)
                   [STREAMPROP LISTINGSTREAM 'TITLE (CONS (CONCAT FROMDIR " vs " TODIR)
                                                          (CONCAT "as of " (DATE]
                   (COMPAREDIRECTORIES.NEWPAGEFN LISTINGSTREAM)))
         [SETQ FROM-GENERATOR (\GENERATEFILES (PACKFILENAME.STRING 'BODY FROMDIR 'BODY
                                                     (OR FILEPATTERN '*.*;))
                                     NIL
                                     '(SORT]
         [SETQ TO-GENERATOR (\GENERATEFILES (PACKFILENAME.STRING 'BODY TODIR 'BODY
                                                   (OR FILEPATTERN '*.*;))
                                   NIL
                                   '(SORT]
         [bind FROM-FILE TO-FILE first (SETQ FROM-FILE (\GENERATENEXTFILE FROM-GENERATOR))
                                           (SETQ TO-FILE (\GENERATENEXTFILE TO-GENERATOR))
            repeatwhile (OR FROM-FILE TO-FILE) bind DT1 DT2 TON SHORT-FROM SHORT-TO
            do (COND
                      ((AND FROM-FILE (CL:MEMBER (UNPACKFILENAME.STRING FROM-FILE 'EXTENSION)
                                             EXTENSIONSTOAVOID :TEST #'STRING-EQUAL))

                       (* ;; "FROM file is on the prohibited-extension list.  Skip it.")

                       (SETQ FROM-FILE (\GENERATENEXTFILE FROM-GENERATOR)))
                      ((AND TO-FILE (CL:MEMBER (UNPACKFILENAME.STRING TO-FILE 'EXTENSION)
                                           EXTENSIONSTOAVOID :TEST #'STRING-EQUAL))

                       (* ;; "TO file is on the prohibited-extension list.  Skip it.")

                       (SETQ TO-FILE (\GENERATENEXTFILE TO-GENERATOR)))
                      (T (SETQ SHORT-FROM (PACKFILENAME.STRING 'HOST NIL 'DIRECTORY NIL 'VERSION NIL
                                                 'BODY FROM-FILE))
                         (SETQ SHORT-TO (PACKFILENAME.STRING 'HOST NIL 'DIRECTORY NIL 'VERSION NIL
                                               'BODY TO-FILE))
                         (HELP)
                         (COND
                            ((NOT FROM-FILE)

                             (* ;; " Ran out of FROM files first; print the missing-FROM marker")

                             (COMPAREDIRS.FORMATLINE LISTINGSTREAM "" "" "" "**"
                                    (GETFILEINFO TO-FILE 'CREATIONDATE)
                                    SHORT-TO
                                    (GETFILEINFO TO-FILE 'AUTHOR))
                             (SETQ TO-FILE (\GENERATENEXTFILE TO-GENERATOR)))
                            ((NOT TO-FILE)

                             (* ;; " Ran out of TO files first; print the missing-TO marker")

                             (COMPAREDIRS.FORMATLINE LISTINGSTREAM SHORT-FROM (GETFILEINFO
                                                                                   FROM-FILE
                                                                                   'AUTHOR)
                                    (GETFILEINFO FROM-FILE 'CREATIONDATE)
                                    "**" "" "" "")
                             (SETQ FROM-FILE (\GENERATENEXTFILE FROM-GENERATOR)))
                            ((CL:STRING-LESSP SHORT-FROM SHORT-TO)

                             (* ;; 
                           "This FROM file has no TO equivalent.  Print the missing-FROM marker")

                             (COMPAREDIRS.FORMATLINE LISTINGSTREAM SHORT-FROM (GETFILEINFO
                                                                                   FROM-FILE
                                                                                   'AUTHOR)
                                    (GETFILEINFO FROM-FILE 'CREATIONDATE)
                                    "**" "" "" "")
                             (SETQ FROM-FILE (\GENERATENEXTFILE FROM-GENERATOR)))
                            ((CL:STRING-LESSP SHORT-TO SHORT-FROM)

                             (* ;; 
                           "This TO file has no FROM equivalent.  Print the missing-TO marker")

                             (COMPAREDIRS.FORMATLINE LISTINGSTREAM "" "" "" "**"
                                    (GETFILEINFO TO-FILE 'CREATIONDATE)
                                    SHORT-TO
                                    (GETFILEINFO TO-FILE 'AUTHOR))
                             (SETQ TO-FILE (\GENERATENEXTFILE TO-GENERATOR)))
                            ([= (SETQ DT1 (GETFILEINFO FROM-FILE 'ICREATIONDATE))
                                (SETQ DT2 (GETFILEINFO TO-FILE 'ICREATIONDATE]
                             (AND SHOW=FILESTOO (COMPAREDIRS.FORMATLINE LISTINGSTREAM SHORT-FROM
                                                       "" (GDATE DT1)
                                                       "=="
                                                       (GDATE DT2)
                                                       SHORT-TO ""))
                             (SETQ TO-FILE (\GENERATENEXTFILE TO-GENERATOR))
                             (SETQ FROM-FILE (\GENERATENEXTFILE FROM-GENERATOR)))
                            (T (COMPAREDIRS.FORMATLINE LISTINGSTREAM SHORT-FROM
                                      (GETFILEINFO FROM-FILE 'AUTHOR)
                                      (GDATE DT1)
                                      (COND
                                         ((LESSP DT1 DT2)
                                          "<<")
                                         (T ">>"))
                                      (GDATE DT2)
                                      SHORT-TO
                                      (GETFILEINFO TO-FILE 'AUTHOR))
                               (SETQ TO-FILE (\GENERATENEXTFILE TO-GENERATOR))
                               (SETQ FROM-FILE (\GENERATENEXTFILE FROM-GENERATOR]
         (AND LISTINGSTREAM (CLOSEF LISTINGSTREAM]))(* ;; "look for compiled files older than the sources")(DEFINEQ(FIND-UNCOMPILED-FILES
  [LAMBDA (FROMDIR TODIR LISTINGFILE)                    (* ; "Edited  3-Nov-94 15:17 by jds")

    (* ;; "Compare the contents of two directories, e.g., for change-control purposes.  Compares files matching FILEPATTERN (or *.*;) on FROMDIR and TODIR, listing which is newer, or when one is not found on the other.  If SHOW=FILESTOO, then files that are the same are also listed.  LISTINGFILE is either a filename for an interpress master, or NIL to go to the display.")

    (LET ((LISTINGSTREAM (COND
                            [LISTINGFILE (OPENIMAGESTREAM LISTINGFILE 'POSTSCRIPT '(LANDSCAPE T]
                            (T NIL)))
          FROM-GENERATOR TO-GENERATOR)
         (COND
            (LISTINGSTREAM (STREAMPROP LISTINGSTREAM 'AFTERNEWPAGEFN #'COMPAREDIRECTORIES.NEWPAGEFN)
                   [STREAMPROP LISTINGSTREAM 'TITLE (CONS (CONCAT "Compiled-file search of " FROMDIR
                                                                 " vs " TODIR)
                                                          (CONCAT "as of " (DATE]
                   (COMPAREDIRECTORIES.NEWPAGEFN LISTINGSTREAM)))
         [SETQ FROM-GENERATOR (\GENERATEFILES (PACKFILENAME.STRING 'BODY FROMDIR 'BODY "*.;")
                                     NIL
                                     '(SORT]
         (bind FROM-FILE first (SETQ FROM-FILE (\GENERATENEXTFILE FROM-GENERATOR))
            repeatwhile FROM-FILE bind DT1 DT2 TON SHORT-FROM SHORT-TO
            do (COND
                      [[SETQ TO-FILE (OR (INFILEP (PACKFILENAME 'DIRECTORY TODIR 'VERSION NIL
                                                         'EXTENSION
                                                         'DFASL
                                                         'BODY FROM-FILE))
                                         (INFILEP (PACKFILENAME 'DIRECTORY TODIR 'VERSION NIL
                                                         'EXTENSION
                                                         'LCOM
                                                         'BODY FROM-FILE]
                       (COND
                          ((< (GETFILEINFO TO-FILE 'ICREATIONDATE)
                              (GETFILEINFO FROM-FILE 'ICREATIONDATE))
                           (PRINTOUT LISTINGSTREAM FROM-FILE " (" (GETFILEINFO FROM-FILE 
                                                                         'CREATIONDATE)
                                  ") vs " TO-FILE " (" (GETFILEINFO TO-FILE 'CREATIONDATE)
                                  ")" T]
                      (T (PRINTOUT LISTINGSTREAM FROM-FILE " has no compiled equivalent." T)))
                  (SETQ FROM-FILE (\GENERATENEXTFILE FROM-GENERATOR)))
         (AND LISTINGSTREAM (CLOSEF LISTINGSTREAM]))(PUTPROPS COMPAREDIRECTORIES COPYRIGHT ("Venue & Xerox Corporation" 1985 1986 1987 1988 1990 1994 1998 2018))(DECLARE%: DONTCOPY  (FILEMAP (NIL (1114 23091 (COMPAREDIRECTORIES 1124 . 11760) (COMPAREDIRS.FORMATLINE 11762 . 14932) (COMPAREDIRECTORIES.NEWPAGEFN 14934 . 16201) (COMPARE-DIRECTORIES 16203 . 23089)) (23156 26000 (FIND-UNCOMPILED-FILES 23166 . 25998)))))STOP