<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Flags                                                                                                                  </title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part142.htm">&lt; Previous</a><span> | </span><a href="../Medley-Primer.html">Contents</a><span> | </span><a href="part144.htm">Next &gt;</a></p><h2 style="padding-top: 4pt;padding-left: 35pt;text-indent: 0pt;text-align: left;">Flags                                                                                                                  </h2><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-top: 5pt;padding-left: 107pt;text-indent: 0pt;text-align: left;">DWIMIFYCOMPFLG</p><p style="padding-top: 7pt;padding-left: 143pt;text-indent: 0pt;line-height: 106%;text-align: justify;">This flag, if set to <span class="s3">T</span>, will cause all expressions to be completely dwinified before the expression is compiled (see Chapter 9). In this state, when the system does not recognize a function of keyword, it will compare the word to a system</p><p style="padding-left: 143pt;text-indent: 0pt;line-height: 107%;text-align: justify;">maintained list to determine whether the word is a macro, <span class="s3">CLISP </span>word, or misspelled user-defined variable.</p><p style="padding-top: 6pt;padding-left: 143pt;text-indent: 0pt;line-height: 107%;text-align: justify;">An example of swinifying before compilation is to convert an <span class="s3">IF </span>call to a <span class="s3">COND</span>. before they are compiled. Undwimified expressions can cause inaccurate</p><p style="padding-left: 143pt;text-indent: 0pt;line-height: 107%;text-align: justify;">compilation. This flag is set by the system to <span class="s3">NIL</span>. Normally, you want this set to <span class="s3">T</span>. For more information on DWIM, refer to the <i>IRM</i>.</p><p class="s3" style="padding-top: 9pt;padding-left: 107pt;text-indent: 0pt;text-align: left;">SYSPRETTYFLAG</p><p style="padding-top: 7pt;padding-left: 143pt;text-indent: 0pt;line-height: 107%;text-align: justify;">When set to <span class="s3">T</span>, all lists returned to the executive window are pretty printed. This flag is originally set by the system to <span class="s3">NIL</span>.</p><p class="s3" style="padding-top: 9pt;padding-left: 107pt;text-indent: 0pt;text-align: left;">CLISPIFTRANFLG</p><p style="padding-top: 7pt;padding-left: 143pt;text-indent: 0pt;line-height: 107%;text-align: justify;">When set to <span class="s3">T</span>, keeps the <span class="s3">IF </span>expression, rather than the <span class="s3">COND </span>translation in your code.</p><p class="s3" style="padding-top: 9pt;padding-left: 107pt;text-indent: 0pt;text-align: left;">PRETTYTABFLG</p><p style="padding-top: 7pt;padding-left: 143pt;text-indent: 0pt;line-height: 107%;text-align: justify;">When set to <span class="s3">T</span>, the pretty printer puts out a tab character rather than several spaces to try to make code align. If <span class="s3">NIL</span>, it uses space characters instead.</p><p class="s3" style="padding-top: 9pt;padding-left: 107pt;text-indent: 0pt;text-align: left;">FONTCHANGEFLG</p><p style="padding-top: 7pt;padding-left: 143pt;text-indent: 0pt;text-align: left;">If NIL, then when pretty printing no font changes will happen (e.g., a smaller font for comments, bold for clip words, and so forth). The default is the atom ALL, so different font s are used where appropriate.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-left: 107pt;text-indent: 0pt;text-align: left;">AUTOBACKTRACEFLG</p><p style="padding-top: 7pt;padding-left: 143pt;text-indent: 0pt;text-align: left;">There are many possible values for this variable. They affect when the back</p><p style="padding-left: 143pt;text-indent: 0pt;text-align: left;">trace window appears with the break window, and how much detail is included in it. The values of this variable include:</p><p style="padding-top: 7pt;padding-left: 155pt;text-indent: -12pt;line-height: 107%;text-align: left;">• <span class="s3">NIL</span>, its initial value. The back trace window is not brought up when an error is generated, until you open it yourself.</p><p style="padding-top: 6pt;padding-left: 143pt;text-indent: 0pt;text-align: left;">• <span class="s3">T</span>, which means that the back trace <span class="s3">BT </span>window is opened for error breaks</p><p style="padding-top: 7pt;padding-left: 155pt;text-indent: -12pt;line-height: 107%;text-align: left;">• <span class="s3">BT! </span>brings up a back trace window with more detail, <span class="s3">BT!</span>, window for error breaks</p><p style="padding-top: 6pt;padding-left: 155pt;text-indent: -12pt;line-height: 107%;text-align: left;">• <span class="s3">ALWAYS </span>brings up a backtrace <span class="s3">BT </span>window for both error breaks, and breaks caused by calling the function <span class="s3">BREAK</span></p><p style="padding-top: 7pt;padding-left: 155pt;text-indent: -12pt;line-height: 107%;text-align: left;">• <span class="s3">ALWAYS! </span>brings up a backtrace window with more detail, <span class="s3">BT!</span>, for both error breaks and breaks caused by calling the function</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-top: 5pt;padding-left: 107pt;text-indent: 0pt;text-align: left;">NOSPELLFLG</p><p style="padding-top: 7pt;padding-left: 143pt;text-indent: 0pt;text-align: left;">Is initially bound to <span class="s3">NIL</span>, so that <span class="s3">DWIM </span>tries to correct all spelling errors,</p><p style="padding-left: 143pt;text-indent: 0pt;text-align: left;">whether they are in a form you just typed in or within a function being run. If the variable is <span class="s3">T</span>, then no spelling correction is performed. This variable is</p><p style="padding-left: 143pt;text-indent: 0pt;text-align: left;">automatically reset to <span class="s3">T </span>when you are compiling a file. If it has some other non-</p><p class="s3" style="padding-left: 143pt;text-indent: 0pt;text-align: left;">NIL <span class="p">value, then spelling correction is only performed on type-in.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part142.htm">&lt; Previous</a><span> | </span><a href="../Medley-Primer.html">Contents</a><span> | </span><a href="part144.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
