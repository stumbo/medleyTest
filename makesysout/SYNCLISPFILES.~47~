(DEFINE-FILE-INFO READTABLE "INTERLISP" PACKAGE "INTERLISP")(FILECREATED "23-Oct-2020 23:44:29" {DSK}<Users>kaplan>Local>medley3.5>lispcore>makesysout>SYNCLISPFILES.;47 10670        changes to%:  (FNS SYNCLISPFILES)      previous date%: "23-Oct-2020 18:01:30" {DSK}<Users>kaplan>Local>medley3.5>lispcore>makesysout>SYNCLISPFILES.;39)(PRETTYCOMPRINT SYNCLISPFILESCOMS)(RPAQQ SYNCLISPFILESCOMS ((FNS SYNCLISPFILES ENDLOADUP MEDLEYVERSION NOPUPPATCH)                              (INITVARS (WRITELISPSYSOUTFLAG T))                              (DECLARE%: DONTEVAL@LOAD DONTEVAL@COMPILE DOCOPY (P (SYNCLISPFILES)))                              (PROP FILETYPE SYNCLISPFILES)))(DEFINEQ(SYNCLISPFILES  [LAMBDA (NODRIBBLE KEEPPUP)                           (* ; "Edited 23-Oct-2020 23:44 by rmk:")                                                            (* ; "Edited 20-Apr-2018 18:28 by rmk:")    (* ;; "This ensures that  files in the xlisp.sysout are as up-to-date as possible with respect to lispcore/sources. Reload (compiled, if possible) files that correspond to symbolic files whose filedates are later than the filedate in the system. If you want a new compilation of a file that has not been modified to be included, then you must make a trivial update of the symbolic file and recompile it, to give it a new, later date.  This is because it is unsafe as a general default to load compiled files with dates later than the sysout, and the sysout doesn't record the dates of loaded compiled files, just their symbolic versions.")    (* ;; " Should be run while connected to lispcore/")    (CLRPROMPT)    (CNDIR (UNIX-GETENV "LOADUPDIR"))    (SETQ LISPMAKESYSDATE MAKESYSDATE)    (LET (SKIPFILES (ROOTDIRECTORY (DIRECTORYNAME T)))         (SETQ MAKESYSFILENAME (PACK* ROOTDIRECTORY "/loadups/xlisp.sysout"))         (* ;;       "FASLOAD has to come first, unconditionally, to get the DFASL file dates converted properly.")         (SETQ LISPUSERSDIRECTORIES (LIST (PACK* ROOTDIRECTORY "/library")                                          (PACK* ROOTDIRECTORY "/lispusers")))         (SETQ DIRECTORIES (APPEND (PACK* ROOTDIRECTORY "/sources")))         (CL:UNLESS NODRIBBLE             (DRIBBLE (PACK* ROOTDIRECTORY "/loadups/xlisp.dribble")))         (BKSYSBUF " ")         (PRINTOUT T T "Synchronizing Lisp sysout at " (DATE)                " while connected to " ROOTDIRECTORY T)         (PRINTOUT T 5 (CDAR (GETP 'SYNCLISPFILES 'FILEDATES))                T 5 "created " (CAAR (GETP 'SYNCLISPFILES 'FILEDATES))                T T)         (PUSH SKIPFILES 'FASLOAD)         (LOAD 'sources/FASLOAD.DFASL 'SYSLOAD)              (* ;                                                            "Lisp macros don't show everything")                                                             (* ;               "(PUSH SKIPFILES 'INSPECT)(DREMOVE (FASSOC 'READTABLEP INSPECTMACROS) INSPECTMACROS)")         (PUSH SKIPFILES 'ATBL)                          (* ;                                                    "Whole file can't be reloaded--smashes readtabl")         (LOADFNS '(\ATBLSET \MAPCHARTABLE RESETREADTABLE)                'sources/ATBL.LCOM                'SYSLOAD)         (LOADVARS '\KEYNAMES 'sources/LLKEY 'SYSLOAD)       (* ; "Extended keynames for Mac/PC")         (PUSH SKIPFILES 'LLKEY)                         (* ; "Loading whole file freezes")         (PUSH SKIPFILES 'MAIKOLOADUPFNS)                (* ;                                                     "Can't reload even if compiled files are later")         (FOR LF FF CFILE LOADEDDATE FILEDATE IFILEDATE NOCOMPILEDFILES CFILES (COUNT _ 0)                (SOURCEDIR _ (CONCAT ROOTDIRECTORY "/sources/")) IN (LDIFFERENCE SYSFILES                                                                                SKIPFILES)            DO [SETQ LOADEDDATE (CAAR (GETP LF 'FILEDATES]                                                              (* ;                                               "Date of symbolic file whose compile file was loaded")                  (CL:UNLESS LOADEDDATE                      (PRINTOUT T T LF                              " does not have a loaded filedate, probably not a Lisp file; skipped" T)                      (GO $$ITERATE))                  (SETQ FF (PACKFILENAME.STRING 'NAME LF 'BODY SOURCEDIR))                  (SETQ FILEDATE (FILEDATE FF))              (* ; "Date of current source file")                  (CL:UNLESS FILEDATE                      (PRINTOUT T LF " does not have a file-directory date, not updated" T)                      (GO $$ITERATE))                  (SETQ CFILES (FOR EXT IN *COMPILED-EXTENSIONS*                                  WHEN (SETQ CFILE (INFILEP (PACKFILENAME.STRING 'EXTENSION EXT                                                                       'BODY FF))) COLLECT CFILE)                   )                  (SETQ CFILE (IF CFILES                                  THEN                                         (* ;;                                       "If more than one (LCOM, DFASL), pick the newest one.")                                        (FOR CF IN CFILES                                           LARGEST (IDATE (FILEDATE CF T)))                                ELSE (PRINTOUT T "Note: No compiled file for " LF T)                                      (PUSH NOCOMPILEDFILES LF)                                      FF))                  (SETQ IFILEDATE (IDATE FILEDATE))                  (CL:UNLESS (IGREATERP IFILEDATE 0)                      (PRINTOUT T "Funny file date " FILEDATE " for " LF ", not updated" T)                      (GO $$ITERATE))                   (* ;; "Load the compiled file if the date of the symbolic file is later than the symbolic file-date in the sysout.  If an updated source and compiled file were copied from another directory, we update the FILEDATES property to point to the new location.  If the loaded and file dates are the same, then update the FILEDATES property to point to the possibly new path name and version even if we don't need to load.")                  (SETQ LOADEDDATE (IDATE LOADEDDATE))                  (IF (IGREATERP IFILEDATE LOADEDDATE)                      THEN (ADD COUNT 1)                            (LOAD CFILE 'SYSLOAD)                            (CL:WHEN [STREQUAL FILEDATE (CAAR (GETP LF 'FILEDATES]                                (* ;; "If copied, the compiled file may install the original location.  Not sure what happens with copied DFASLs")                                (RPLACD (CAR (GETP LF 'FILEDATES))                                       (INFILEP FF)))                    ELSEIF (IEQP IFILEDATE LOADEDDATE)                      THEN (RPLACD (CAR (GETP LF 'FILEDATES))                                      (INFILEP FF)))            FINALLY (PRINTOUT T T T COUNT " files loaded" T)                  (CL:WHEN NOCOMPILEDFILES (PRINTOUT T "Symbolic files loaded:  " .PPVTL                                                   NOCOMPILEDFILES T T)))         (* ;; "Load from patch directory")         (FOR PF (COUNT _ 0) IN (FILDIR (PACKFILENAME.STRING 'NAME "*.;" 'BODY                                                           (CONCAT ROOTDIRECTORY "/patches/")))            DO (FOR EXT CFILE IN *COMPILED-EXTENSIONS*                      WHEN (SETQ CFILE (INFILEP (PACKFILENAME.STRING 'EXTENSION EXT 'BODY PF)))                      DO (ADD COUNT 1)                            (LOAD CFILE 'SYSLOAD)            (* ; "symbolic file date")                            (RETURN) FINALLY (PRINTOUT T "Note: No compiled file for " PF T)                                           (ADD COUNT 1)                                           (LOAD PF 'SYSLOAD))            FINALLY (PRINTOUT T T T COUNT " files loaded" T))         (CL:UNLESS KEEPPUP (NOPUPPATCH))         (ENDLOADUP)         (CL:WHEN WRITELISPSYSOUTFLAG             (* ;; "So we print out the new version number")             (SETQ MAKESYSFILENAME (OUTFILEP MAKESYSFILENAME))             (PRINTOUT T "Creating updated LISP sysout on " MAKESYSFILENAME T)             (CLRPROMPT)             (BKSYSBUF (CONCAT "(IL:MAKESYS %"" MAKESYSFILENAME "%" %"Medley Lisp Sysout%")")))         (CL:UNLESS NODRIBBLE (DRIBBLE])(ENDLOADUP  [LAMBDA NIL                                                (* ; "Edited 11-Oct-90 11:02 by jds")    (* ;; "set up for NONET configuration;  sites with ethernet can load in init from other places")    (* ;; "All records existing at this point in time have been loaded as part of the system.")    [MAPC USERRECLST (FUNCTION (LAMBDA (R)                                 (RECORDPRIORITY R 'SYSTEM]    [MAPC SYSTEMINITVARS (FUNCTION (LAMBDA (X)                                     (SETTOPVAL (CAR X)                                            (COPY (CDR X]    (COND       ((NEQ \MACHINETYPE \MAIKO)        (* ;;       "On a non-SUN loadup, need to clear out two fields in the Interface Page, per AR 11276. JDS")        (replace (IFPAGE ProcessSize) of \InterfacePage with 0)        (replace (IFPAGE StorageFullState) of \InterfacePage with 0])(MEDLEYVERSION  [LAMBDA NIL                                           (* ; "Edited 25-Mar-2018 22:07 by rmk:")                                                             (* ; "Edited 11-Nov-98 22:02 by rmk:")    (SELECTQ (LISPVERSION)        (39424 '|1.1|)        (39539 '|1.15|)        (40960 '|1.2|)        (4928 '|2.0|)        (21000 '|2.1|)        (35000 '|3.5|)        (35010 '|3.5|)        (HELP "UNRECOGNIZED MEDLEY VERSION" (LISPVERSION])(NOPUPPATCH  [LAMBDA NIL                                           (* ; "Edited 14-May-2018 12:22 by rmk:")    (* ;; "Fix it so pup stuff never gets run")    (SETQ \PROCESSES (DREMOVE (FIND.PROCESS '\PUPGATELISTENER)                            \PROCESSES))    (SETQ \FILEDEVICES (FOR F IN \FILEDEVICES UNLESS (STRPOS "LEAF" F) COLLECT F))    (MOVD 'NILL '\CANONICALIZE.PUP.HOSTNAME]))(RPAQ? WRITELISPSYSOUTFLAG T)(DECLARE%: DONTEVAL@LOAD DONTEVAL@COMPILE DOCOPY (SYNCLISPFILES))(PUTPROPS SYNCLISPFILES FILETYPE :TCOMPL)(PUTPROPS SYNCLISPFILES COPYRIGHT (NONE))(DECLARE%: DONTCOPY  (FILEMAP (NIL (699 10446 (SYNCLISPFILES 709 . 8621) (ENDLOADUP 8623 . 9539) (MEDLEYVERSION 9541 . 10019) (NOPUPPATCH 10021 . 10444)))))STOP